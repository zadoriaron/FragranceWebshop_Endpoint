// <auto-generated />
using System;
using FragranceWebshop_Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FragranceWebshop_Data.Migrations
{
    [DbContext(typeof(FragranceWebshopDbContext))]
    partial class FragranceWebshopDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FragranceWebshop_Entities.Entity_Models.Perfum", b =>
                {
                    b.Property<string>("PerfumId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PerfumName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("RecommendedSeason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PerfumId");

                    b.ToTable("perfums");
                });

            modelBuilder.Entity("FragranceWebshop_Entities.Entity_Models.Purchase", b =>
                {
                    b.Property<string>("PurchaseId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PerfumId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("PurchaseId");

                    b.HasIndex("PerfumId");

                    b.ToTable("purchases");
                });

            modelBuilder.Entity("FragranceWebshop_Entities.Entity_Models.Purchase", b =>
                {
                    b.HasOne("FragranceWebshop_Entities.Entity_Models.Perfum", "PurchasedPerfum")
                        .WithMany("Purchases")
                        .HasForeignKey("PerfumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PurchasedPerfum");
                });

            modelBuilder.Entity("FragranceWebshop_Entities.Entity_Models.Perfum", b =>
                {
                    b.Navigation("Purchases");
                });
#pragma warning restore 612, 618
        }
    }
}
